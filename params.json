{"name":"PHPNetMap","tagline":"Web application for ethernet network mapping","body":"# PHPNetMap\r\n\r\n[README.pt-BR](https://github.com/marcelofmatos/phpnetmap/blob/master/README.pt-BR.md)\r\n\r\nPHP Software for network device monitoring with\r\nSNMP v(1/2c/3) protocol. Tested with 3Com/HP, ProCurve, Dell and Extreme devices.\r\nSome other models with SNMP support work properly.\r\nFramework [yii](http://www.yiiframework.com/) with\r\n[Bootstrap](http://www.yiiframework.com/extension/bootstrap)\r\n[Colorpicker](http://www.yiiframework.com/extension/colorpicker) and\r\n[CAdvancedArBehavior](http://www.yiiframework.com/extension/cadvancedarbehavior).\r\nUsing JavaScript [D3](http://d3js.org/) library  to the map.\r\n\r\n\r\n## How It works\r\n\r\nThe PHPNetMap shows connected hosts based on the [FIB](https://en.wikipedia.org/wiki/Forwarding_information_base)\r\nor table CAM switches, and [ARP](https://en.wikipedia.org/wiki/Address_Resolution_Protocol) table \r\ndevices. You can perform searches within these tables in various\r\ndevices with the Search form. With the map view you can check the connections \r\nbetween hosts and each host there is a screen indicating the  port status with \r\ntheir respective connected host. You can see the operating status port and \r\nstatus of the [Spanning Tree Protocol](https://en.wikipedia.org/wiki/Spanning_Tree_Protocol) \r\non switches with dot1dStpPortState OID. Using an SNMP community with read/write \r\npermission you can change the ifAdminStatus or set ifAlias\r\n\r\n\r\n# PHPNetMap and Docker\r\n\r\nI created a Docker image with all the configuration ready for use PHPNetMap,\r\navailable in [Docker Hub](https://hub.docker.com/r/marcelofmatos/phpnetmap/).\r\nWith the docker-compose.yml in the project root you can download the image and run\r\nsystem only with the command `docker-compose up` within the directory\r\nproject. Note server settings to run in production mode (Password in .htpasswd, \r\nAllowOverride=true, and so on). Change the docker-compose.yml as necessary.\r\n\r\n## Installing Docker\r\n```\r\ncurl -ssl https://get.docker.com/ | sh\r\n```\r\n\r\n## Installing the docker-compose\r\n\r\n```\r\napt-get install python-pip\r\npip install docker-compose\r\n```\r\n\r\n\r\n# Server\r\n\r\nThe software was tested on Debian and Ubuntu Server with the following \r\ninstalled packages:\r\n\r\n* apache2\r\n* libapache2-mod-php5\r\n* php5-snmp\r\n* php5-sqlite\r\n* php-apc\r\n* snmpd\r\n* sqlite3\r\n\r\nThe login is set in .htaccess and .htpasswd so apache must be configured to \r\nread the instructions\r\n\r\n\r\n# Screenshots\r\n\r\n## Main page\r\n![Home Screenshot](https://raw.githubusercontent.com/marcelofmatos/phpnetmap/master/images/screenshot_home.png)\r\n\r\n## Host and network map\r\n![Host Screenshot](https://raw.githubusercontent.com/marcelofmatos/phpnetmap/master/images/screenshot_host.png)\r\n\r\n## Traffic ports\r\n![Traffic Screenshot](https://raw.githubusercontent.com/marcelofmatos/phpnetmap/master/images/screenshot_traffic.png)\r\n\r\n\r\n# References\r\n* http://www.yiiframework.com/\r\n* http://d3js.org/\r\n* https://docs.docker.com/engine/installation/\r\n* https://docs.docker.com/compose/compose-file/\r\n","google":"UA-74550501-1","note":"Don't delete this file! It's used internally to help with page regeneration."}